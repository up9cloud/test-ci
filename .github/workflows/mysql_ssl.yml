on: [push]

jobs:
  check_and_test:
    name: Check
    strategy:
      fail-fast: false
      matrix:
        backend: ["mysql"]
        os: [ubuntu-latest, macos-latest, windows-2019]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - id: setup-mysql
        name: Up mysql
        uses: shogo82148/actions-setup-mysql@v1
        if: matrix.backend == 'mysql'
        with:
          mysql-version: "8.0"
          auto-start: false
      # https://dev.mysql.com/doc/refman/5.7/en/option-files.html
      - name: Setup mysql (Linux)
        if: runner.os == 'Linux' && matrix.backend == 'mysql'
        env:
          MYSQL_BASE_DIR: ${{ steps.setup-mysql.outputs.base-dir }}
        run: |
          pwd
          ls -al ${MYSQL_BASE_DIR}
          ls -al ${MYSQL_BASE_DIR}/etc/mysql/
          ls -al ${MYSQL_BASE_DIR}/etc/mysql/conf.d/
          ls -al ${MYSQL_BASE_DIR}/etc/mysql/mysql.conf.d/
          sudo cp mysql/ssl.cnf ${MYSQL_BASE_DIR}/etc/mysql/conf.d/
          sudo mkdir -p /tmp/ssl
          sudo bash mysql/mysql_ssl_rsa_setup.sh /tmp/ssl
          #mysql_ssl_rsa_setup --verbose --uid=mysql --datadir=/tmp/ssl
          ls -al /tmp/ssl
      - name: Up mysql (Linux)
        if: runner.os == 'Linux' && matrix.backend == 'mysql'
        env:
          MYSQL_BASE_DIR: ${{ steps.setup-mysql.outputs.base-dir }}
        run: |
          set +e
          ${{ steps.setup-mysql.outputs.base-dir }}/bin/mysqld \
            --defaults-file=${MYSQL_BASE_DIR}/etc/my.cnf \
            --user=root
          code=$?
          if [ $code -ne 0 ]; then
            exit $code
          fi
          set -e
          mysql -uroot -e "CREATE user 'ssl'@'%' REQUIRE SSL;"

      - name: Test mysql (Linux) connection
        if: runner.os == 'Linux' && matrix.backend == 'mysql'
        run: |
          sudo chown -R mysql:mysql /tmp/ssl
          ls -al /tmp/ssl
          mysql -uroot -e "\\s"
          mysql -uroot -e "SHOW VARIABLES LIKE '%ssl%';"
          mysql -uroot -e "SHOW GLOBAL STATUS LIKE 'current_tls%';"
          mysql -uroot -e "SELECT 1"
          mysql -ussl --ssl-ca=/tmp/ssl/ca.pem -e "SELECT 2"
          mysql -ussl --ssl-cert=/tmp/ssl/client-cert.pem --ssl-key=/tmp/ssl/client-key.pem -e "SELECT 3"

      - name: Install mysql (MacOS)
        if: runner.os == 'macOS' && matrix.backend == 'mysql'
        run: |
          brew install mariadb@10.5
          ls -al $(brew --prefix mariadb@10.5)/
          ls -al $(brew --prefix mariadb@10.5)/conf.d/
          ls -al $(brew --prefix mariadb@10.5)/mysql.conf.d/
          cp mysql/ssl.cnf $(brew prefix mariadb@10.5)/conf.d
          mkdir -p /tmp/ssl
          bash mysql/mysql_ssl_rsa_setup.sh /tmp/ssl
          ls -al /tmp/ssl
          $(brew --prefix mariadb@10.5)/bin/mysql.server start
          sleep 3
          $(brew --prefix mariadb@10.5)/bin/mysql -e "CREATE user 'ssl'@'%' REQUIRE SSL;" -urunner

      - name: Test mysql (MacOS) connection
        if: runner.os == 'macOS' && matrix.backend == 'mysql'
        run: |
          $(brew --prefix mariadb@10.5)/bin/mysql -urunner -e "\\s; SHOW VARIABLES LIKE '%ssl%';"
          $(brew --prefix mariadb@10.5)/bin/mysql -urunner -e "SELECT 1"
          $(brew --prefix mariadb@10.5)/bin/mysql -ussl --ssl-ca=/tmp/ssl/ca.pem -e "SELECT 1"
          $(brew --prefix mariadb@10.5)/bin/mysql -ussl --ssl-cert=/tmp/ssl/client-cert.pem --ssl-key=/tmp/ssl/client-key.pem -e "SELECT 1"

      - name: Install mysql (Windows) pre
        if: runner.os == 'Windows' && matrix.backend == 'mysql'
        shell: bash
        run: |
          ls -al
          bash mysql/mysql_ssl_rsa_setup.sh C:\Temp

      - name: Install mysql (Windows)
        if: runner.os == 'Windows' && matrix.backend == 'mysql'
        shell: cmd
        run: |
          dir /a
          choco install mysql
          "C:\tools\mysql\current\bin\mysql" -e "CREATE user 'ssl'@'%' REQUIRE SSL;" -uroot

      - name: Test mysql (Windows) connection
        if: runner.os == 'Windows' && matrix.backend == 'mysql'
        shell: cmd
        run: |
          "C:\tools\mysql\current\bin\mysql" -uroot -e "\\s; SHOW VARIABLES LIKE '%ssl%';"
          "C:\tools\mysql\current\bin\mysql" -uroot -e "SELECT 1"
          "C:\tools\mysql\current\bin\mysql" -ussl --ssl-ca=C:\tools\mysql\current\lib -e "SELECT 1"
          "C:\tools\mysql\current\bin\mysql" -ussl --ssl-cert=/tmp/ssl/client-cert.pem --ssl-key=/tmp/ssl/client-key.pem -e "SELECT 1"
