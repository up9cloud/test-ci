on: [push]

jobs:
  check_and_test:
    name: Check
    strategy:
      fail-fast: false
      matrix:
        backend: ["mysql"]
        os: [ubuntu-latest, macos-latest, windows-2019]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      # https://dev.mysql.com/doc/refman/5.7/en/option-files.html
      - name: Generate mysql ssl certs (Linux, macOS)
        if: matrix.backend == 'mysql' && (runner.os == 'Linux' || runner.os == 'macOS')
        run: |
          pwd
          env
          sudo mkdir -p /tmp/ssl
          sudo bash mysql/mysql_ssl_rsa_setup.sh /tmp/ssl
          #mysql_ssl_rsa_setup --verbose --uid=mysql --datadir=/tmp/ssl
          #sudo chown -R mysql:mysql /tmp/ssl
          sudo chmod +r /tmp/ssl/server-key.pem
          sudo chmod +r /tmp/ssl/client-key.pem
          ls -al /tmp/ssl
      - name: Generate mysql ssl certs (Windows)
        if: matrix.backend == 'mysql' && runner.os == 'Windows'
        shell: bash
        env:
          MSYS_NO_PATHCONV: 1
        run: |
          pwd
          env
          
          # /c/Temp === /c/Users/RUNNER~1/AppData/Local/Temp
          #bash mysql/mysql_ssl_rsa_setup.sh /c/Users/RUNNER~1/AppData/Local/Temp/ssl
          #touch /c/Users/RUNNER~1/AppData/Local/Temp/ssl/c_app_data_temp
          #ls -al /c/Users/RUNNER~1/AppData/Local/Temp/ssl
          
          bash mysql/mysql_ssl_rsa_setup.sh /c/Temp/ssl
          touch /c/Temp/ssl/temp
          ls -al /c/Temp/ssl
          
          bash mysql/mysql_ssl_rsa_setup.sh /tmp/ssl
          touch /tmp/ssl/tmp
          ls -al /tmp/ssl

      - id: setup-mysql-unix
        name: Up mysql (Linux, macOS)
        uses: shogo82148/actions-setup-mysql@v1
        if: matrix.backend == 'mysql' && (runner.os == 'Linux' || runner.os == 'macOS')
        with:
          mysql-version: "8.0"
          my-cnf: |
            ssl_ca="/tmp/ssl/ca.pem"
            ssl_cert="/tmp/ssl/server-cert.pem"
            ssl_key="/tmp/ssl/server-key.pem"

      - id: setup-mysql-windows
        name: Up mysql (Windows)
        uses: shogo82148/actions-setup-mysql@v1
        if: matrix.backend == 'mysql' && runner.os == 'Windows'
        with:
          mysql-version: "8.0"
          my-cnf: |
            ssl_ca=C:\Temp\ssl\ca.pem
            ssl_cert=C:\Temp\ssl\server-cert.pem
            ssl_key=C:\Temp\ssl\server-key.pem

      - name: Create mysql account for ssl
        if: matrix.backend == 'mysql'
        run: |
          mysql -uroot -e "CREATE user 'ssl'@'%' REQUIRE SSL;"

      - name: Show mysql setting
        if: matrix.backend == 'mysql'
        shell: bash
        run: |
          mysql -uroot -e "\\s"
          mysql -uroot -e "SHOW VARIABLES LIKE '%ssl%';"
          mysql -uroot -e "SHOW GLOBAL STATUS LIKE 'current_tls%';"

      - name: Test mysql ssl connection (Linux, macOS)
        if: matrix.backend == 'mysql' && (runner.os == 'Linux' || runner.os == 'macOS')
        run: |
          mysql -uroot -e "SELECT 1"
          mysql -ussl --ssl-ca=/tmp/ssl/ca.pem -e "SELECT 2"
          mysql -ussl --ssl-cert=/tmp/ssl/client-cert.pem --ssl-key=/tmp/ssl/client-key.pem -e "SELECT 3"

      - name: Test mysql ssl connection (Windows)
        if: matrix.backend == 'mysql' && runner.os == 'Windows'
        shell: bash
        run: |
          ls -al /c/Temp/ssl
          ls -al /tmp/ssl
          mysql -ussl --ssl-ca=/c/tmp/ssl/ca.pem -e "SELECT 2"
          mysql -ussl --ssl-cert=/c/tmp/ssl/client-cert.pem --ssl-key=/c/tmp/ssl/client-key.pem -e "SELECT 3"
          mysql -ussl --ssl-ca=C:\Temp\ssl\ca.pem -e "SELECT 2"
          mysql -ussl --ssl-cert=C:\Temp\ssl\client-cert.pem --ssl-key=C:\Temp\ssl\client-key.pem -e "SELECT 3"
